<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 
		DB to File(delimited) Job
	-->
	
	<batch:job id="db-to-file-job">
		<!-- Step for data insert -->
		<batch:step id="file-to-db-step" next="db-to-file-step">			
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="file-to-db-reader" writer="file-to-db-writer" commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
		<!-- DB to File(delimited) Step -->
		<batch:step id="db-to-file-step">			
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="db-to-file-reader" writer="db-to-file-writer" commit-interval="1000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<!-- JdbcCursorItemReader -->
	<!-- <bean id="db-to-file-reader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="fetchSize" value="1000"/>
		<property name="sql">
		    <value>
				<![CDATA[
					SELECT num, name, sex, department_code, joblevel_code, skill_code, telephone, birthdate, postal, address
					FROM   EMPLOYEE
				]]>
			</value>
	    </property>
	    
		<property name="rowMapper">
		     using column map row mapper
		    bean class="org.springframework.jdbc.core.ColumnMapRowMapper"/

		     using bean property row mapper (slowest)
		    bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
		    	<property name="mappedClass" value="poc.batch.RXBXI"/>
		   	</bean
		   	
		   	using custom row mapper
		   	bean class="devonframe.batch.sample.common.model.EmployeeRowMapper" /

		    <bean class="devonframe.batch.item.database.FastReflectorRowMapper">
		        <property name="mappedClass" value="devonframe.batch.sample.common.model.Employee"/>
		    </bean>
		</property>
	</bean> -->
	<!-- MyBatisBatchItemWriter -->
	<bean id="db-to-file-reader" class="devonframe.batch.item.database.MyBatisAutoQueryPagingItemReader">
	  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	  <property name="statementId" value="employee.retrieveEmployee" />
	  <property name="pageSize" value="100"/>
	</bean>

	<!-- FlatFileItemWriter -->
	<bean id="db-to-file-writer" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
   		<!-- property name="resource" value="classpath:devonframe/data/output/employee.1000.out.csv" /-->
   		<property name="resource" value="file:///C:/devonbatch/out/employee.1000.out.csv" />
   		<property name="lineAggregator">
      		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
	 			<property name="fieldExtractor">
		    		<bean class="devonframe.batch.item.file.transform.FastReflectorFieldExtractor">
		       			<property name="names"
							value="num,name,sex,departmentCode,joblevelCode,skillCode,telephone,birthdate,postal,address" />
		    		</bean>
	 			</property>
        		<property name="delimiter" value=","/>
      		</bean>
   		</property>
	</bean>
	
</beans>