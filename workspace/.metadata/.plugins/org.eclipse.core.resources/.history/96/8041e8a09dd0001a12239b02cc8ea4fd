package com.gyva.web.common.login.controller;

import java.util.Locale;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.context.support.MessageSourceAccessor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.i18n.SessionLocaleResolver;

import com.gyva.web.common.login.service.LoginService;
import com.gyva.web.common.user.model.UserVO;
import com.gyva.web.common.user.service.UserService;

/**
 * <pre>
 * 본 클래스는 로그인 처리를 담당하는 Controller 클래스입니다.
 * </pre>
 *
 * @author XXX팀 OOO
 */

@Controller
public class LoginController {

	@Resource(name = "loginService")
	private LoginService loginService;

	@Resource(name = "userService")
	private UserService userService;

    @Resource(name="messageSourceAccessor")
    private MessageSourceAccessor messageSourceAccessor;

    // 회원 가입 page
	@RequestMapping(value="/common/login/JoinForm.do")
	public String LoginForm(String redirectUrl, ModelMap model){
		System.out.println("\t\t\t ################################# LoginForm start");
		if(redirectUrl != null && !redirectUrl.trim().equals("")) {
			model.addAttribute("redirectUrl", redirectUrl);
		}
		System.out.println("\t\t\t ################################# LoginForm end");
		return "common/login/JoinForm";
	}
	
    // 로그인 page
	@RequestMapping("/common/login/LoginForm.do")
	public String loginForm(@ModelAttribute UserVO input, String redirectUrl, ModelMap model, HttpSession session) {
		System.out.println("\t\t\t ################################# loginForm start");
		System.out.println("input :::[" + input + "]");
		System.out.println("\t\t\t ################################# loginForm end");
		return "common/login/LoginForm";
	}

	// 로그아웃
    @RequestMapping("/common/login/logout.do")
    public String logout(@ModelAttribute UserVO input, ModelMap model, HttpSession session) {
    	session.removeAttribute("loginUser");
		return "redirect:/common/login/retrieveLoginForm.do";
    }

    // login
    @RequestMapping("/common/login/login.do")
    public String login(@ModelAttribute UserVO input, String redirectUrl, ModelMap model, HttpSession session) {
		System.out.println("\t\t\t ################################# login start");
		System.out.println("input :::[" + input + "]");

        boolean isExistUser = loginService.checkUserId(input);
        if(!isExistUser) {
            model.addAttribute("errorMsg", messageSourceAccessor.getMessage("sample.common.login.invalidUserId"));

            return "common/login/loginForm";
        }

        boolean isValidUser = loginService.checkUser(input);
        if(isValidUser) {
        	UserVO loginUser = userService.searchUser(input);

        	// language대신 국가 코드 세팅 차후 삭제 가능
        	String language = loginUser.getCountry_code(); 
        	if(language == null) {
        		language = "";
        	}

            session.setAttribute("loginUser", loginUser);
            session.setAttribute(SessionLocaleResolver.LOCALE_SESSION_ATTRIBUTE_NAME, new Locale(language));
            
            /* redirectUrl 필요할 경우 주석 제거            
            if(redirectUrl != null && !redirectUrl.trim().equals("") && !redirectUrl.trim().equals("null")) {
    			return "redirect:/main.do?redirectUrl="+redirectUrl;
    		}
    		*/
            
            // 차후 메인페이지로 이동
            return "main";
//        	return "redirect:/main.do";
        }

        model.addAttribute("errorMsg", messageSourceAccessor.getMessage("sample.common.login.invalidPassword"));
		System.out.println("\t\t\t ################################# login end");
        return "common/login/loginForm";
    }
    
    // 회원 비밀번호 수정
 	@RequestMapping(value = "/common/user/resetPasswordUser.do")
 	public String resetPasswordUser(UserVO input, ModelMap model) {
 		System.out.println("\t\t\t ################################# resetPasswordUser start");
 		loginService.checkUserId(input);
 		userService.insertUser(input);
 		System.out.println("\t\t\t ################################# resetPasswordUser e n d");
 		return "redirect:/common/login/JoinForm.do?msg=success";
 	}
 	
    // 메인 페이지 호출 컨트롤러 (컨트롤러 명 수정가능)
	@RequestMapping(value="/main.do")
	public String retrieveMainPage(String redirectUrl, ModelMap model){
		if(redirectUrl != null && !redirectUrl.trim().equals("")) {
			model.addAttribute("redirectUrl", redirectUrl);
			String menuCode = redirectUrl.substring(0, redirectUrl.indexOf("/"));
			if(redirectUrl.startsWith("/")) {
				menuCode = redirectUrl.substring(1);
				menuCode = menuCode.substring(0, menuCode.indexOf("/"));
			}
			model.addAttribute("menuCode", menuCode);
		}
		return "main";
	}
}
